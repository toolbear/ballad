plugins {
  id 'java'
  id 'eclipse'
  id 'nebula.dependency-lock' version '4.3.2'
  id 'nebula.project' version '3.3.0'
  id 'nebula.nebula-release' version '4.1.0'
  id 'nebula.nebula-bintray' version '3.5.2'
  id 'nebula.lint' version '6.1.0'
}

sourceCompatibility = 1.8
version = '0.0.2'
jar {
  manifest {
    attributes 'Implementation-Title': 'Ballad'
    attributes 'Implementation-Version': version
  }
}

sourceSets {
  example {
    compileClasspath += main.output
    runtimeClasspath += main.output
  }
}

configurations {
  exampleCompile.extendsFrom compile
}

repositories {
  mavenCentral()
}

dependencies {
  compile 'org.hamcrest:hamcrest-core:1.3.+'
  compile 'junit:junit:4.+'


  testCompile 'org.assertj:assertj-core:3.+'
  testCompile 'org.mockito:mockito-core:2.0.43-beta'
  testCompile 'info.solidsoft.mockito:mockito-java8:2.0.0-beta'

  exampleCompile configurations.compile
  exampleRuntime configurations.runtime

  // testCompile sourceSets.example.output // kludge to get example compiled by default
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked"
  options.encoding = 'UTF-8'
}

test {
  testLogging {
    events "failed", "standardOut", "standardError"
    outputs.upToDateWhen {false}
    exceptionFormat "full"
  }
}

allprojects {
  eclipse {
    classpath {
      defaultOutputDir = file('.gradle/build/eclipse')
    }
  }
}
