buildscript { repositories { jcenter() } }
plugins {
  id 'java'
  id 'eclipse'
  id 'nebula.dependency-lock' version '4.2.0'
  id 'nebula.project' version '3.1.0'
  id 'nebula.nebula-release' version '4.0.1'
  id 'nebula.nebula-bintray' version '3.3.4'
  id 'nebula.lint' version '0.22.0'
}

description 'ballad: Given/When/Then for Java â€” a BDD JUnit extension inspired by rspec-given'
sourceCompatibility = 1.8

repositories {
  jcenter()
  mavenCentral()
}

sourceSets {
  example {
    compileClasspath += main.output
    runtimeClasspath += main.output
  }
}

configurations {
  exampleCompile.extendsFrom compile
}

dependencies {
  compile 'org.hamcrest:hamcrest-core:1.3.+'
  compile 'junit:junit:4.+'


  testCompile 'org.assertj:assertj-core:3.+'
  testCompile 'org.mockito:mockito-core:2.0.43-beta'
  testCompile 'info.solidsoft.mockito:mockito-java8:2.0.0-beta'

  exampleCompile configurations.compile
  exampleRuntime configurations.runtime
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked"
  options.encoding = 'UTF-8'
}

test {
  testLogging {
    events "failed", "standardOut", "standardError"
    outputs.upToDateWhen {false}
    exceptionFormat "full"
  }
}

eclipse {
  classpath {
    defaultOutputDir = file('build/eclipse')
  }
}

contacts {
  'tim@tool-man.org' {
    moniker 'Tim Taylor'
    github 'toolbear'
  }
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_API_KEY')
  dryRun = true
  publish = false
  pkg {
    repo = 'toolbear'
    userOrg = 'ballad'
    websiteUrl = 'https://github.com/toolbear/${project.name}'
    issueTrackerUrl = 'https://github.com/toolbear/${project.name}/issues'
    vcsUrl = 'https://github.com/toolbear/${project.name}.git'
    licenses = ['MIT']
    labels = ['junit', 'bdd', 'given']
  }
}

gradleLint.rules = ['dependency-parentheses', 'dependency-tuple']
